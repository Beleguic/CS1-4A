"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _glob = _interopRequireDefault(require("glob"));

var _compact = _interopRequireDefault(require("lodash/compact"));

var _uniq = _interopRequireDefault(require("lodash/uniq"));

var _path = require("path");

var _excluded = ["files", "verbose"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var WebpackWatchPlugin = /*#__PURE__*/function () {
  function WebpackWatchPlugin() {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var _ref$files = _ref.files,
        files = _ref$files === void 0 ? [] : _ref$files,
        verbose = _ref.verbose,
        globOptions = _objectWithoutProperties(_ref, _excluded);

    _classCallCheck(this, WebpackWatchPlugin);

    this.files = files;
    this.verbose = !!verbose;
    this.globOptions = _objectSpread({
      absolute: true
    }, globOptions);
    this.filesAlreadyAdded = false;
  }

  _createClass(WebpackWatchPlugin, [{
    key: "apply",
    value: function apply(compiler) {
      var _this = this;

      // webpack 4 hooks
      (compiler.hooks ? compiler.hooks.afterCompile.tapAsync.bind(compiler.hooks.afterCompile, 'WebpackWatchPlugin') : compiler.plugin.bind(compiler, 'after-compile'))(function (compilation, callback) {
        var filesFound = [];
        var filesFoundToEclude = [];

        var _iterator = _createForOfIteratorHelper(_this.files),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var pattern = _step.value;

            if (pattern.substr(0, 1) !== '!') {
              _glob["default"].sync(pattern, _this.globOptions).map(function (file) {
                return filesFound.push(file);
              });
            } else {
              _glob["default"].sync(pattern.substr(1), _this.globOptions).map(function (file) {
                return filesFoundToEclude.push(file);
              });
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }

        var files = (0, _uniq["default"])((0, _compact["default"])(filesFound.map(function (file) {
          if (~filesFoundToEclude.indexOf(file)) {
            return null;
          }

          return file;
        }))).map(function (file) {
          return (0, _path.resolve)(file);
        });

        if (_this.verbose && !_this.filesAlreadyAdded) {
          console.log('Additional files watched : ', JSON.stringify(files, null, 2));
        }

        if (Array.isArray(compilation.fileDependencies)) {
          files.map(function (file) {
            return compilation.fileDependencies.push(file);
          });
        } else {
          files.map(function (file) {
            return compilation.fileDependencies.add(file);
          });
        }

        _this.filesAlreadyAdded = true;
        callback();
      });
    }
  }]);

  return WebpackWatchPlugin;
}();

exports["default"] = WebpackWatchPlugin;